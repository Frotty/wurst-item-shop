package ItemShopTest
import ItemShopMenu
import ClosureTimers
import ToggleShopButton
import UnitIds
import RecipeItem
import Icons

constant SWORD_ITEM = compiletime(new RecipeItem()
  ..setName("Cool Sword")
  ..setInterfaceIcon(Icons.bTNSteelMelee)
  ..setGoldCost(120)
  ..addBonus(Bonus.DAMAGE, 10)
  ..generateTooltip("It cuts through enemies.")
)..register()

constant RING_ITEM = compiletime(new RecipeItem()
  ..setName("Cool Ring")
  ..setInterfaceIcon(Icons.bTNRingGreen)
  ..setGoldCost(140)
  ..addBonus(Bonus.ARMOR, 2)
  ..generateTooltip("Looks shiny.")
)..register()

constant ARMOR_ITEM = compiletime(new RecipeItem()
  ..setName("Cool Armor")
  ..setInterfaceIcon(Icons.bTNSteelArmor)
  ..setGoldCost(160)
  ..addBonus(Bonus.LIFE, 100)
  ..generateTooltip("Pretty cool.")
)..register()

constant SUPER_ARMOR_ITEM = compiletime(new RecipeItem()
  ..setName("Super Armor")
  ..addBonus(Bonus.LIFE, 150)
  ..addBonus(Bonus.ARMOR, 4)
  ..setGoldCost(260)
  ..setInterfaceIcon(Icons.bTNAdvancedMoonArmor)
)..register()

constant SUPER_ARMOR_RECIPE = new ItemRecipe()
  ..setRequiredItems(RING_ITEM, ARMOR_ITEM)
  ..setResultItem(SUPER_ARMOR_ITEM)

init
  nullTimer() ->
    let shop = new ItemShop()
    ..addSection("Armor")
    ..addItem(SWORD_ITEM)
    ..addItem(RING_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addSection("Recipes")
    ..addRecipe(SUPER_ARMOR_RECIPE)

    new ToggleShopButton(shop, "Shop (L)")
    ..show(players[0], createUnit(players[0], UnitIds.bloodmage, ZERO2, angle(0)))
    ..addHotkeyForPlayer(players[0], OSKEY_L)

    players[0].addGold(900)

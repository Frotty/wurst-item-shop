package ItemShopTest
import ItemShopMenu
import ClosureTimers
import ToggleShopButton
import UnitIds
import RecipeItem
import ItemRecipe
import Icons

constant SWORD_ITEM = compiletime(new RecipeItem()
  ..setName("Cool Sword")
  ..setInterfaceIcon(Icons.bTNSteelMelee)
  ..setGoldCost(120)
  ..setTooltipBasic("Purchase Cool Sword")
  ..setTooltipExtended("Adds some damage.")
)..register()
constant RING_ITEM = compiletime(new RecipeItem()
  ..setName("Cool Ring")
  ..setInterfaceIcon(Icons.bTNRingGreen)
  ..setGoldCost(140)
  ..setTooltipBasic("Purchase Cool Ring")
  ..setTooltipExtended("Adds some armor.")
)..register()
constant ARMOR_ITEM = compiletime(new RecipeItem()
  ..setName("Cool Armor")
  ..setInterfaceIcon(Icons.bTNSteelArmor)
  ..setGoldCost(160)
  ..setTooltipBasic("Purchase Cool Armor")
  ..setTooltipExtended("Adds some HP.")
)..register()

constant SUPER_ARMOR_ITEM = compiletime(new RecipeItem()..setName("Super Armor")..setInterfaceIcon(Icons.bTNAdvancedMoonArmor))..register()
constant SUPER_ARMOR_ITEM_RECIPE = compiletime(new RecipeItem()
  ..setName("Super Cool Armor Recipe")
  ..setInterfaceIcon(Icons.bTNAdvancedMoonArmor)
  ..setTooltipBasic("Purchase Super Cool Armor Recipe")
  ..setTooltipExtended("Makes you very cool.\nRequires:\n-Cool Ring\n-Cool Armor" + ARMOR_ITEM.name)
  ..setGoldCost(150)
)..register()

constant SUPER_ARMOR_RECIPE = new ItemRecipe()
  ..setRequiredItems(RING_ITEM.getNewId(), ARMOR_ITEM.getNewId(), SUPER_ARMOR_ITEM_RECIPE.getNewId())
  ..setResultItem(SUPER_ARMOR_ITEM.getNewId())

init
  nullTimer() ->
    let shop = new ItemShop()
    ..addSection("Armor")
    ..addItem(SWORD_ITEM)
    ..addItem(RING_ITEM)
    ..addItem(ARMOR_ITEM)
    ..addSection("Recipes")
    ..addItem(SUPER_ARMOR_ITEM_RECIPE)

    new ToggleShopButton(shop, "Shop (L)")
    ..show(players[0], createUnit(players[0], UnitIds.bloodmage, ZERO2, angle(0)))
    ..addHotkeyForPlayer(players[0], OSKEY_L)

    players[0].addGold(900)

package ItemShopTest
import ItemShopMenu
import ClosureTimers
import ToggleShopButton
import UnitIds
import RecipeItem
import ItemRecipe
import Icons

constant SWORD_ITEM = compiletime(new RecipeItem()..setName("Cool Sword")..setInterfaceIcon(Icons.bTNSteelMelee)..setGoldCost(120)..build())..register()
constant RING_ITEM = compiletime(new RecipeItem()..setName("Cool Ring")..setInterfaceIcon(Icons.bTNRingGreen)..setGoldCost(140)..build())..register()
constant ARMOR_ITEM = compiletime(new RecipeItem()..setName("Cool Armor")..setInterfaceIcon(Icons.bTNSteelArmor)..setGoldCost(160)..build())..register()
constant SUPER_ARMOR_ITEM = compiletime(new RecipeItem()..setName("Super Armor")..setInterfaceIcon(Icons.bTNArcaniteArmor)..build())..register()
constant SUPER_ARMOR_ITEM_RECIPE= compiletime(new RecipeItem()..setName("Super Armor Recipe")..setInterfaceIcon(Icons.bTNArcaniteArmor)..setGoldCost(150)..build())..register()

constant SUPER_ARMOR_RECIPE = compiletime(new ItemRecipe("Ring Recipe")..setRequiredItems(RING_ITEM.getNewId(), ARMOR_ITEM.getNewId(), SUPER_ARMOR_ITEM_RECIPE.getNewId())..setResultItem(SUPER_ARMOR_ITEM.getNewId()))

constant SWORD = new ShopItemDefinition(SWORD_ITEM)
constant RING = new ShopItemDefinition(RING_ITEM)
constant ARMOR = new ShopItemDefinition(ARMOR_ITEM)
constant SUPER_ARMOR = new ShopItemDefinition(SUPER_ARMOR_ITEM_RECIPE)

init
  nullTimer() ->
    let shop = new ItemShop()
    ..addSection("Consumables")
    ..addItem(SWORD)
    ..addItem(ARMOR)
    ..addItem(SWORD)
    ..addItem(RING)
    ..addItem(RING)
    ..addItem(SWORD)
    ..addItem(SUPER_ARMOR)
    ..addItem(ARMOR)
    ..addItem(SWORD)
    ..addSection("Armor")
    ..addItem(SWORD)
    ..addItem(ARMOR)
    ..addItem(RING)

    new ToggleShopButton(shop, "Shop (L)")
    ..show(players[0], createUnit(players[0], UnitIds.bloodmage, ZERO2, angle(0)))
    ..addHotkeyForPlayer(players[0], OSKEY_L)

    players[0].addGold(900)

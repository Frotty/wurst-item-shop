package ItemShopIcon
import SoundUtils
import FramehandleNames
import ClosureFrames
import HashMap
import RecipeItem
import ItemShop

// Sounds
constant notEnoughGoldSound = new SoundDefinition(Sounds.necromancerNoGold1)
constant itemBoughtSound = new SoundDefinition(Sounds.pickUpItem)
constant cantBuyItemSound = new SoundDefinition(Sounds.error)
constant ERROR_SOUND = CreateSoundFromLabel("InterfaceError", false, false, false, 10, 10)

function simerror(player p, string msg)
  if localPlayer == p
    ClearTextMessages()
    DisplayTimedTextToPlayer(p, 0.51, 0.91, 2.00, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n|cffff2600" + msg + "|r" )
    ERROR_SOUND.play()

public function framehandle.removeFocus()
  this.disable()
  this.enable()

public class ItemIcon
  static private var globalIconContext = 0

  private RecipeItem itemDef
  private ItemRecipe recipeDef
  private var iconContext = 0
  private var iconPath = ""
  private var iconPathDisabled = ""

  private framehandle itemIconButton = null
  private framehandle itemIcon = null
  private framehandle itemText = null

  IterableMap<player, unit> buyers

  construct(framehandle parent, IterableMap<player, unit> buyers)
    this.iconContext = globalIconContext
    this.buyers = buyers
    globalIconContext++

    itemIconButton = createFrame(FramehandleTypeNames.gluebutton, "ItemIconButton", parent, FramehandleNames.iconButtonTemplate, iconContext)

    itemIcon = createFrame(FramehandleTypeNames.backdrop, "itemIcon", itemIconButton, "", iconContext)
      ..setAllPoints(itemIconButton)

    itemIconButton.setSize(0.0225, 0.0225)

  function getIconFrame() returns framehandle
    return itemIconButton

  function setupItem(RecipeItem def)
    this.itemDef = def
    setupIcon()
    itemIconButton.onClick() ->
      let p = GetTriggerPlayer()
      let target = buyers.get(p)

      itemIconButton.removeFocus()

      if target != null
        if target.isAlive()
          if p.getGold() >= itemDef.goldCost and p.getLumber() >= itemDef.lumberCost
            p..addGold(-itemDef.goldCost)
            ..addLumber(-itemDef.lumberCost)
            target.addItemById(itemDef.tomeId)
            itemBoughtSound.playForPlayer(p)
          else
            notEnoughGoldSound.playForPlayer(p)
      else
        cantBuyItemSound.playForPlayer(p)


  function setupRecipe(ItemRecipe def)
    this.recipeDef = def
    setupIcon()
    itemText..setText(recipeDef.goldCost.toString())
    itemIconButton.onClick() ->
      let p = GetTriggerPlayer()
      let target = buyers.get(p)

      itemIconButton.removeFocus()

      if target != null
        if target.isAlive()
          if p.getGold() >= recipeDef.goldCost and p.getLumber() >= recipeDef.lumberCost
            if recipeDef.checkUnit(target, -1)
              p..addGold(-recipeDef.goldCost)
              ..addLumber(-recipeDef.lumberCost)
              itemBoughtSound.playForPlayer(p)
            else
              simerror(p, "Missing required items!")
          else
            notEnoughGoldSound.playForPlayer(p)
      else
        cantBuyItemSound.playForPlayer(p)


  function checkBuyability(player p, int gold, int lumber)
    if p == localPlayer
      if ((itemDef != null ? itemDef.goldCost : recipeDef.goldCost) <= gold and
        (itemDef != null ? itemDef.lumberCost : recipeDef.lumberCost) <= lumber)
        itemIcon.setTexture(iconPath, 0, true)
        itemText.setTextColor(colorA(255, 215, 0, 1))
      else
        itemIcon.setTexture(iconPathDisabled, 0, true)
        itemText.setTextColor(colorA(200, 155, 0, 1))

  private function setupIcon()
    let tooltip = createFrame("FRAME", "", itemIconButton, "", iconContext)
    ..setSize(0.24, 0.04)
    ..setPoint(FRAMEPOINT_RIGHT, itemIconButton, FRAMEPOINT_LEFT, vec2(-0.005, 0))

    itemIconButton.setTooltip(tooltip)

    let tooltipBackdrop = createFrame("BoxedText", tooltip, 0, iconContext)

    let tempItem = createItem(itemDef != null ? itemDef.tomeId : recipeDef.resultItemId, vec2(0, 0))

    iconPath = tempItem.getIconPath()
    iconPathDisabled = iconPath.replace("BTN", "DISBTN").replace("CommandButtons", "CommandButtonsDisabled")

    itemIcon.setTexture(iconPath, 0, true)

    let goldcost = itemDef != null ? itemDef.goldCost : recipeDef.goldCost
    let lumbercost = itemDef != null ? itemDef.lumberCost : recipeDef.lumberCost
    let title = itemDef != null ? itemDef.tooltipBasic : recipeDef.name
    let description = itemDef != null ? itemDef.tooltipExtended : recipeDef.tooltip

    let itemIconTooltip = createFrame(FramehandleTypeNames.backdrop, "", tooltip, "", 0)
    ..setSize(0.025, 0.025)
    ..setTexture(iconPath, 0, false)
    ..setPoint(FRAMEPOINT_TOPLEFT, tooltip, FRAMEPOINT_TOPLEFT)
    ..disable()

    let textTitle = getFrame("BoxedTextTitle", iconContext)
    ..setText(title)
    ..setSize(0.24, 0)
    ..setPoint(FRAMEPOINT_TOPLEFT, itemIconTooltip, FRAMEPOINT_TOPRIGHT, vec2(0.002, 0))
    ..disable()

    if goldcost == 0 and lumbercost == 0
      createFrame(FramehandleTypeNames.text, "", tooltip, "", 0)
        ..setText("(free recipe)")
        ..setPoint(FRAMEPOINT_TOPLEFT, textTitle, FRAMEPOINT_BOTTOMLEFT, vec2(0, -0.002))
        ..disable()
    else
      framehandle goldIconText = null
      if goldcost > 0
        let goldIcon = createFrame(FramehandleTypeNames.backdrop, "", tooltip, "", 0)
        ..setSize(0.01, 0.01)
        ..setTexture(GOLD_ICON, 0, false)
        ..setPoint(FRAMEPOINT_TOPLEFT, textTitle, FRAMEPOINT_BOTTOMLEFT, vec2(0, -0.002))
        ..disable()

        goldIconText = createFrame(FramehandleTypeNames.text, "", tooltip, "", 0)
        ..setText(goldcost.toString())
        ..setPoint(FRAMEPOINT_LEFT, goldIcon, FRAMEPOINT_RIGHT, vec2(0.003, 0))
        ..disable()

      if lumbercost > 0
        let lumberIcon = createFrame(FramehandleTypeNames.backdrop, "", tooltip, "", 0)
        ..setSize(0.01, 0.01)
        ..setTexture(LUMBER_ICON, 0, false)
        ..setPoint(goldIconText != null ? FRAMEPOINT_LEFT : FRAMEPOINT_TOPLEFT,
                    goldIconText != null ? goldIconText : textTitle,
                    goldIconText != null ? FRAMEPOINT_RIGHT : FRAMEPOINT_BOTTOMLEFT,
                    goldIconText != null ? vec2(0.006, 0) : vec2(0, -0.002))
        ..disable()

        createFrame(FramehandleTypeNames.text, "", tooltip, "", 0)
        ..setText(lumbercost.toString())
        ..setPoint(FRAMEPOINT_LEFT, lumberIcon, FRAMEPOINT_RIGHT, vec2(0.003, 0))
        ..disable()


    let textValue = getFrame("BoxedTextValue", iconContext)
    ..setText(description)
    ..setSize(0.24, 0)
    ..setPoint(FRAMEPOINT_TOPLEFT, itemIconTooltip, FRAMEPOINT_BOTTOMLEFT, 0, -0.005)
    ..disable()

    tooltipBackdrop.setPoint(FRAMEPOINT_TOPLEFT, itemIconTooltip, FRAMEPOINT_TOPLEFT, -0.005, 0.005)
    tooltipBackdrop.setPoint(FRAMEPOINT_BOTTOMRIGHT, textValue, FRAMEPOINT_BOTTOMRIGHT, 0.005, -0.005)

    tempItem.remove()

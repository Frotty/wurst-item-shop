package ItemShopIcon
import SoundUtils
import FramehandleNames
import ClosureFrames
import HashMap
import RecipeItem

// Sounds
constant notEnoughGoldSound = new SoundDefinition(Sounds.necromancerNoGold1)
constant itemBoughtSound = new SoundDefinition(Sounds.pickUpItem)
constant cantBuyItemSound = new SoundDefinition(Sounds.error)
constant ERROR_SOUND = CreateSoundFromLabel("InterfaceError", false, false, false, 10, 10)

function simerror(player p, string msg)
  if localPlayer == p
    ClearTextMessages()
    DisplayTimedTextToPlayer(p, 0.51, 0.91, 2.00, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n|cffff2600" + msg + "|r" )
    ERROR_SOUND.play()

public function framehandle.removeFocus()
  this.disable()
  this.enable()

public class ItemIcon
  static private var globalIconContext = 0

  private RecipeItem itemDef
  private ItemRecipe recipeDef
  private var iconContext = 0
  private var iconPath = ""
  private var iconPathDisabled = ""

  private framehandle itemIconButton = null
  private framehandle itemIcon = null
  private framehandle itemText = null

  IterableMap<player, unit> buyers

  construct(framehandle parent, IterableMap<player, unit> buyers)
    this.iconContext = globalIconContext
    this.buyers = buyers
    globalIconContext++

    itemIconButton = createFrame(FramehandleTypeNames.gluebutton, "ItemIconButton", parent, FramehandleNames.iconButtonTemplate, iconContext)

    itemIcon = createFrame(FramehandleTypeNames.backdrop, "itemIcon", itemIconButton, "", iconContext)
      ..setAllPoints(itemIconButton)

    itemText = createFrame(FramehandleTypeNames.text, "itemText", itemIconButton, "", iconContext)
      ..setTextColor(colorA(255, 215, 0, 1))
      ..setPoint(FRAMEPOINT_TOPLEFT, itemIconButton, FRAMEPOINT_BOTTOMLEFT, vec2(0, -0.001))

    itemIconButton.setSize(0.025, 0.025)

  function setupItem(RecipeItem def)
    this.itemDef = def
    setupIcon()
    itemText..setText(itemDef.goldCost.toString())
    itemIconButton.onClick() ->
      let p = GetTriggerPlayer()
      let target = buyers.get(p)

      itemIconButton.removeFocus()

      if target != null
        if target.isAlive()
          if p.getGold() >= itemDef.goldCost
            p.setGold(p.getGold() - itemDef.goldCost)
            target.addItemById(itemDef.tomeId)
            itemBoughtSound.playForPlayer(p)
          else
            notEnoughGoldSound.playForPlayer(p)
      else
        cantBuyItemSound.playForPlayer(p)


  function setupRecipe(ItemRecipe def)
    this.recipeDef = def
    setupIcon()
    itemText..setText(recipeDef.goldCost.toString())
    itemIconButton.onClick() ->
      let p = GetTriggerPlayer()
      let target = buyers.get(p)

      itemIconButton.removeFocus()

      if target != null
        if target.isAlive()
          if p.getGold() >= recipeDef.goldCost
            if recipeDef.checkUnit(target, -1)
              p.setGold(p.getGold() - recipeDef.goldCost)
              itemBoughtSound.playForPlayer(p)
            else
              simerror(p, "Missing required items!")
          else
            notEnoughGoldSound.playForPlayer(p)
      else
        cantBuyItemSound.playForPlayer(p)


  function checkBuyability(player p, int gold)
    if p == localPlayer
      if ((itemDef != null ? itemDef.goldCost : recipeDef.goldCost) <= gold)
        itemIcon.setTexture(iconPath, 0, true)
        itemText.setTextColor(colorA(255, 215, 0, 1))
      else
        itemIcon.setTexture(iconPathDisabled, 0, true)
        itemText.setTextColor(colorA(200, 155, 0, 1))

  private function setupIcon()
    let tooltip = createFrame("BoxedText", itemIconButton, 0, iconContext)
    itemIconButton.setTooltip(tooltip)

    let tempItem = createItem(itemDef != null ? itemDef.tomeId : recipeDef.resultItemId, vec2(0, 0))

    iconPath = tempItem.getIconPath()
    iconPathDisabled = iconPath.replace("BTN", "DISBTN").replace("CommandButtons", "CommandButtonsDisabled")

    itemIcon.setTexture(iconPath, 0, true)

    let textTitle = getFrame("BoxedTextTitle", iconContext)..setText(itemDef != null ? itemDef.tooltipBasic : recipeDef.name)
    ..setSize(0.24, 0)
    ..setPoint(FRAMEPOINT_RIGHT, itemIconButton, FRAMEPOINT_LEFT)
    let textValue = getFrame("BoxedTextValue", iconContext)..setText(itemDef != null ? itemDef.tooltipExtended : recipeDef.tooltip)
    ..setSize(0.24, 0)
    ..setPoint(FRAMEPOINT_TOP, textTitle, FRAMEPOINT_BOTTOM, 0, -0.005)

    tooltip.setPoint(FRAMEPOINT_TOPRIGHT, textTitle, FRAMEPOINT_TOPRIGHT, 0.005, 0.005)
    tooltip.setPoint(FRAMEPOINT_BOTTOMLEFT, textValue, FRAMEPOINT_BOTTOMLEFT, -0.005, -0.005)

    tempItem.remove()

  function setIconPosition(framehandle parent, vec2 iconPosition)
    itemIconButton.setPoint(FRAMEPOINT_TOPLEFT, parent, FRAMEPOINT_TOPLEFT, iconPosition)
